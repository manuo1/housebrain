#!/bin/bash
# Script de mise √† jour pour HouseBrain

# Arr√™ter en cas d'erreur
set -e

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

function print_step() {
    echo -e "${GREEN}[‚úî] $1${NC}"
}

function print_error() {
    echo -e "${RED}[‚úò] $1${NC}"
}

print_step "Mise √† jour de HouseBrain..."

# üîπ Gestion du cron
print_step "Suppression du cron..."

# Supprimer de la t√¢che cron
if crontab -l | grep -q "manage.py periodic_tasks"; then
    crontab -l | grep -v "manage.py periodic_tasks" | crontab -
    print_step "Ancienne t√¢che cron supprim√©e."
else
    print_step "Aucune t√¢che cron existante trouv√©e."
fi


# üîπ Arr√™t des services
print_step "Arr√™t des services..."
sudo systemctl stop nginx
sudo systemctl stop gunicorn
sudo systemctl stop teleinfo-listener.service
sudo systemctl stop bluetooth-listener.service

# üîπ Mise √† jour du d√©p√¥t
print_step "Mise √† jour du code source depuis Git..."
cd /home/admin/housebrain
git fetch --all
git reset --hard origin/main
git pull origin main

# üîπ Mise √† jour de l'environnement virtuel
print_step "Activation de l'environnement virtuel..."
cd backend
source .venv/bin/activate

print_step "Mise √† jour des d√©pendances..."
pip install -r requirements.txt

# üîπ Migrations Django et collectstatic
print_step "Application des migrations..."
python manage.py migrate

print_step "Collecte des fichiers statiques..."
python manage.py collectstatic --no-input

# üîπ Red√©marrage des services
print_step "Red√©marrage des services..."
sudo systemctl start nginx
sudo systemctl start gunicorn
sudo systemctl start teleinfo-listener.service
sudo systemctl start bluetooth-listener.service

# üîπ V√©rification des statuts
print_step "V√©rification des statuts des services..."
sudo systemctl status nginx --no-pager
sudo systemctl status gunicorn --no-pager
sudo systemctl status teleinfo-listener.service --no-pager
sudo systemctl status bluetooth-listener.service --no-pager

# Recr√©er la t√¢che cron
CRON_CMD="* * * * * cd /home/admin/housebrain/backend && /home/admin/housebrain/backend/.venv/bin/python manage.py periodic_tasks 2>&1 | sed \"s/^/$(date +\%Y-\%m-\%d\ \%H:\%M:\%S) /\" >> /home/admin/housebrain/backend/logs/cron_tasks.log"
(crontab -l; echo "$CRON_CMD") | crontab -

print_step "T√¢che cron configur√©e."

print_step "Mise √† jour de HouseBrain termin√©e avec succ√®s !"
